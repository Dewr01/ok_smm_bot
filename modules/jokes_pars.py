import requests


def fetch_health_jokes():
    """–ê–Ω–µ–∫–¥–æ—Ç—ã –æ –∫—Ä–∞—Å–æ—Ç–µ –∏ –∑–¥–æ—Ä–æ–≤—å–µ —Å anekdot.ru"""
    url = "https://anekdot.ru/rss/export_j.xml"
    headers = {"User-Agent": "ok-smm-bot/1.0"}
    jokes = []

    try:
        r = requests.get(url, headers=headers, timeout=10)
        if r.ok:
            # –ü–∞—Ä—Å–∏–º RSS
            import xml.etree.ElementTree as ET
            root = ET.fromstring(r.content)

            # –ò—â–µ–º –∞–Ω–µ–∫–¥–æ—Ç—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            keywords = ["–∫—Ä–∞—Å–æ—Ç", "–∑–¥–æ—Ä–æ–≤", "–≤—Ä–∞—á", "–¥–æ–∫—Ç–æ—Ä", "–º–µ–¥–∏—Ü–∏–Ω", "–¥–∏–µ—Ç", "—Å–ø–æ—Ä—Ç", "–∑–∞—Ä—è–¥–∫", "–∫–æ—Å–º–µ—Ç",
                        "–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä", "–º–∞—Å—Å–∞–∂", "–π–æ–≥", "—Ñ–∏—Ç–Ω–µ—Å", "–≤–∏—Ç–∞–º–∏–Ω", "—Ç–∞–±–ª–µ—Ç–∫", "–±–æ–ª—å–Ω–∏—á", "–∫–ª–∏–Ω–∏–∫"]

            for item in root.findall(".//item"):
                title = item.find("title").text if item.find("title") is not None else ""
                description = item.find("description").text if item.find("description") is not None else ""

                # –û–±—ä–µ–¥–∏–Ω—è–µ–º title –∏ description –¥–ª—è –ø–æ–∏—Å–∫–∞
                full_text = (title + " " + description).lower()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
                if any(keyword in full_text for keyword in keywords):
                    joke_text = description if description else title
                    if joke_text:
                        jokes.append(f"üòÇ {joke_text}")

                    # –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                    if len(jokes) >= 10:
                        break

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤, –¥–æ–±–∞–≤–∏–º –∑–∞–ø–∞—Å–Ω—ã–µ
        if not jokes:
            jokes = [
                "üòÇ –î–æ–∫—Ç–æ—Ä, —è –±—É–¥—É –∂–∏—Ç—å? - –ê —Å–º—ã—Å–ª?",
                "üòÇ –ü—Ä–∏—à–ª–∞ –∂–µ–Ω—â–∏–Ω–∞ –∫ –≤—Ä–∞—á—É: '–î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –æ—Ç –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –ø–æ–±–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç - –º—É–∂ —Å—Ç–∞–ª –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ!'",
                "üòÇ - –î–æ—Ä–æ–≥–æ–π, —è –Ω–∞ –¥–∏–µ—Ç–µ. - –û—Ç–ª–∏—á–Ω–æ! –ê —á—Ç–æ –º—ã –±—É–¥–µ–º –µ—Å—Ç—å?",
                "üòÇ –ú—É–∂ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∂–µ–Ω—É: '–ß—Ç–æ —ç—Ç–æ —É —Ç–µ–±—è –∑–∞ –∫—Ä–µ–º –∑–∞ 5000 —Ä—É–±–ª–µ–π?' - '–≠—Ç–æ –∫—Ä–µ–º –æ—Ç –º–æ—Ä—â–∏–Ω.' - '–ê –ø–æ—á–µ–º—É —Ç—ã –µ–≥–æ –Ω–∞ –º–æ—é —Ä—É–±–∞—à–∫—É –Ω–∞–Ω–µ—Å–ª–∞?'",
                "üòÇ –ó–∞–±–æ—Ç–∞ –æ –∑–¥–æ—Ä–æ–≤—å–µ - —ç—Ç–æ –∫–æ–≥–¥–∞ —Ç—ã –ø–æ–∫—É–ø–∞–µ—à—å –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫—É—é –µ–¥—É, –∞ –ø–æ—Ç–æ–º –∑–∞–ø–∏–≤–∞–µ—à—å –µ—ë —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–º."
            ]

    except Exception as e:
        print(f"[WARN] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤: {e}")
        # –ó–∞–ø–∞—Å–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã
        jokes = [
            "üòÇ –î–µ–≤—É—à–∫–∞, –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ, –≥–¥–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤–∏—Ç–∞–º–∏–Ω—ã? - –í –∞–ø—Ç–µ–∫–µ. - –°—Ç—Ä–∞–Ω–Ω–æ, —Ç–∞–º —Å–∫–∞–∑–∞–ª–∏, —á—Ç–æ —É –Ω–∏—Ö —Ç–æ–ª—å–∫–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞...",
            "üòÇ - –Ø –Ω–∞—á–∞–ª –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –π–æ–≥–æ–π. - –ò –∫–∞–∫ —É—Å–ø–µ—Ö–∏? - –£–∂–µ –º–æ–≥—É –¥–æ—Ç—è–Ω—É—Ç—å—Å—è –¥–æ –ø—É–ª—å—Ç–∞ –Ω–µ –≤—Å—Ç–∞–≤–∞—è —Å –¥–∏–≤–∞–Ω–∞!",
            "üòÇ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ - —ç—Ç–æ –∫–æ–≥–¥–∞ —Å–º–æ—Ç—Ä–∏—à—å –Ω–∞ –ø–∏—Ä–æ–∂–Ω–æ–µ –∏ –≥–æ–≤–æ—Ä–∏—à—å: '–ù–µ—Ç, —è —Å–∏–ª—å–Ω—ã–π!' –ê –ø–æ—Ç–æ–º —Å—ä–µ–¥–∞–µ—à—å –µ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø–∞–ª–æ."
        ]

    return jokes


print(fetch_health_jokes())
